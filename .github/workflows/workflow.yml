#generate and publish the binary to github release
#when we tag the commit

name: Build and Release

on:
    push:
        branches: [main]
        tags:
        - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
    pull_request:
        branches: [main]

jobs:
    build:
        runs-on: ubuntu-latest

        steps:
        - name: Checkout
          uses: actions/checkout@v2

        - name: Set up Go
          uses: actions/setup-go@v2
          with:
            go-version: 1.21.4

        #Build the binary for windows
        - name: Build for Windows
          run: GOOS=windows GOARCH=amd64 go build -o video-slicer-windows.exe

        - name: upload windows artifact
          uses: actions/upload-artifact@v4
          with:
            name: video-slicer-windows.exe
            path: video-slicer-windows.exe 

        #Build the binary for linux
        - name: Build for Linux
          run: GOOS=linux GOARCH=amd64 go build -o video-slicer-linux


        - name: upload linux artifact
          uses: actions/upload-artifact@v4
          with:
            name: video-slicer-linux
            path: video-slicer-linux 
 
        #Build the binary for mac
        - name: Build for Mac
          run: GOOS=darwin GOARCH=amd64 go build -o video-slicer-mac
        

        - name: upload mac artifact
          uses: actions/upload-artifact@v4
          with:
            name: video-slicer-mac
            path: video-slicer-mac 
 
 


        # #Update them to the release page
        # - name: Create Release
        #   id: create_release
        #   uses: actions/create-release@v1
        #   env:
        #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        #   with:
        #     tag_name: ${{ github.ref }}
        #     release_name: Release ${{ github.ref }}
        #     body: |
        #       Changes in this Release
        #     draft: false
        #     prerelease: false
        